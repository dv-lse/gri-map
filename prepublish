#!/bin/bash

# based on Mike Bostock [ https://github.com/topojson/world-atlas ], with alterations

# pre-compute a GIS dataset for the GRI world map

# run 'npm install d3 d3-dsv' first to get libraries

# output:
#   (1) large countries are taken from Natural Earth's 110m dataset
#   (2) tiny countries have a choropleth point off to the side
#   (3) hand-tweaked focus bounds over-ride those computed from the NE dataset

rm -rvf world

mkdir -p build world

download_ne() {
  curl -z build/ne_$1_admin_0_$2.zip -o build/ne_$1_admin_0_$2.zip http://naciscdn.org/naturalearth/$1/cultural/ne_$1_admin_0_$2.zip
  unzip -od build build/ne_$1_admin_0_$2.zip
  chmod a-x build/ne_$1_admin_0_$2.*
}

download_ne 110m countries
download_ne 110m tiny_countries

# tiny countries (mostly islands)

shp2json -n build/ne_110m_admin_0_tiny_countries.shp \
  | ndjson-filter '(d.properties.homepart > 0)' \
  | ndjson-map -r d3 '(d.id = d.properties.iso_a3, delete d.properties, d)' \
  > build/choropleth_points.json

# large country features

shp2json -n build/ne_110m_admin_0_countries.shp \
  | ndjson-map -r d3 '(d.id = d.properties.iso_a3, delete d.properties, d)' \
  | geostitch -n \
  > build/countries.json

# final output is topography with layers for countries, land masses and country boundaries (mesh)

geo2topo -q 1e5 -n \
  countries=<(cat build/countries.json) \
  choropleth_points=<(cat build/choropleth_points.json) \
  | topomerge --mesh -f 'a !== b' borders=countries \
  | topomerge land=countries \
  > world/map.json
